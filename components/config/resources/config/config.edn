{:app-name "metis"
 :mulog
 {:type :multi
         :publishers[
                     ;; send events to the stdout
                     ;;{:type :console
                     ;; :pretty? true}
                     ;; send events to ELS
                      {:type :elasticsearch
                       :url "http://a75438:9200/"
                       :els-version  :v7.x
                       :publish-delay 1000
                       :data-stream  "vl-log-stream"
                       :name-mangling false}
                     ]}
 ;; rest api server
 :api {:port 8010}
 :build-delay 500
 :build-on-start []
 ;; long term memory: couchdb
 :ltmem-srv "127.0.0.1"
 ;;:ltmem-srv "a73434"
 :ltmem-port 5984
 :ltmem-db "vl_db_work"
 :ltmem-prot "http"
 :ltmem-task-design "dbmp"
 :ltmem-task-view "tasks"
 :ltmem-mpds-design "dbmp"
 :ltmem-mpds-view "mpdocs"
 
 ;; short term memory: redis
 :stmem-srv "127.0.0.1"
 :stmem-port 6379
 :stmem-db 2
 :stmem-notif-sep "@"
 :stmem-key-sep "@"
 ;; register relax
 :stmem-reg-relax 20 ;; ms
 ;; modify relax
 :stmem-mod-relax 30 ;; ms
 :stmem-trans {:tasks "tasks"
               :cont "container" ; struct
               :id "id" ; struct
               :defins "definitions" ; struct
               :exch "exchange"  ; struct
               :title "title"
               :descr "description"
               :elem "elements"
               :cond "cond"
               :cls "class"
               :meta "meta"
               :mp-deps "mpdeps"
               :task-deps "taskdeps"
               :std "standard"
               :nc "ncont"
               :nd "ndefins"
               :name "name"
               :defin "definition" ; func
               :retry "retry" ; func
               :resp "response" ; func
               :req "request" ; func
               :state "state" ; func
               :msg "message" ; func
               :ctrl "ctrl" ; func
               :* "*"}
 ;; for order or sorting reasons
 ;; idx, jdx and kdx are padded
 :stmem-key-pad-length 3
 :at-replace "%"
 :ref-mpd "mpd-ref.edn"
 ;; a task should at least take 10ms
 ;; in order to give the keyspace notification listener
 ;; a chance to find the `next-to-start` task
 :min-task-period 500
 ;; number of retries before task state is set to error
 ;; the device should be reseted and the retry key must
 ;; be deleted manualy
 :max-retry 20
 ;; If the stop-if flag is false the next attempt is triggert
 ;; by writing a `:ready`-state. Delaying this relaxes the system  
 :stop-if-delay 1000
 :json-post-header {:content-type :json
                    :socket-timeout 600000 ;; 10 min
                    :connection-timeout 600000
                    :accept :json}
 ;; :dev-hub-url "http://e75455:55555"
 :dev-hub-url "http://localhost:9009"
 ;; :dev-hub-url "http://a73436:55555"
 ;; :dev-hub-url "http://localhost:55555"
 ;; :anselm-url "http://localhost:50005"
 :dev-proxy-url "http://localhost:8009"
 }
